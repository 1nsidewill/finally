# version: "3.8"

services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.traefik.address=:8080
      - --log.level=DEBUG
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - "traefik.http.routers.traefik.rule=PathPrefix(`/traefik`)"
      - "traefik.http.routers.traefik.entrypoints=traefik"
      - "traefik.http.routers.traefik.service=api@internal"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

  agent-service:
    build:
      context: ./agent-service
      dockerfile: Dockerfile
    container_name: agent-service
    env_file:
      - ./agent-service/.env.prod
    environment:
      - ENVIRONMENT=prod
    labels:
      - "traefik.http.routers.agent-service.rule=PathPrefix(`/agent-service`)"
      - "traefik.http.services.agent-service.loadbalancer.server.port=80"
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 10
    networks:
      - app-network

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - /app/qdrant_data:/qdrant/storage

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    #restart: always
    env_file:
      - ./frontend/.env.prod
    container_name: frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=PathPrefix(`/`)"
      - "traefik.http.routers.front.entrypoints=web"
      - "traefik.http.services.front.loadbalancer.server.port=3000"
    networks:
      - app-network

      
  indexer:
    build:
      context: ./indexer
      dockerfile: Dockerfile
    container_name: indexer
    env_file:
      - ./indexer/.env.prod
    environment:
      - ENVIRONMENT=prod
    ports:
      - "7070:7070"
    expose:
      - "7070"
    networks:
      - app-network
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 10

configs:
  qdrant_config:
    content: |
      log_level: INFO

networks:
  app-network:
    external: true
